trigger:
- master
- develop
- release/*

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  tests: '**/*Tests.csproj'
steps:
- checkout: self
  persistCredentials: true

- task: gitversion/setup@0
  displayName: 'Install GitTools'
  inputs:
    versionSpec: '5.3.x'
- task: gitversion/execute@0
  displayName: 'Calculate SemVer'
- script: echo current version is $(GitVersion.SemVer)
  displayName: 'Display calculated version'
  
- task: UseDotNet@2
  displayName: 'Setup .NET SDK Version 3.x'
  inputs:
    packageType: 'sdk'
    version: '3.x'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: DotNetCoreCLI@2 
  displayName: 'Build Solution' 
  inputs: 
    projects: '$(solution)' 
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(GitVersion.SemVer)' 
    versioningScheme: byBuildNumber

- task: DotNetCoreCLI@2
  displayName: 'Running Tests'
  inputs:
    command: 'test'
    projects: '$(tests)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  displayName: 'Pack' 
  inputs: 
    command: pack
    packagesToPack: '$(solution)' 
    nobuild: true 
    versioningScheme: byEnvVar 
    verbosityPack: 'Normal'
    versionEnvVar: GitVersion.SemVer
 
- task: DotNetCoreCLI@2 
  displayName: 'Push Nuget' 
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3f77c195-d5b2-42b8-b020-9a39ada7715d/49e70946-a183-4655-ae10-a30e8ab2f693'
